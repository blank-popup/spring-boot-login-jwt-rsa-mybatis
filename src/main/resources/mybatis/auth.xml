<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.loginJwtRSA.security.MapperAuth">
    <select id="selectUserDetailsByUsername" parameterType="String" resultType="com.example.loginJwtRSA.security.UserDetailsCustom">
        SELECT
            id,
            username,
            password
        FROM aha_user
        WHERE username = #{username}
        AND is_active = 1
    </select>

    <select id="selectUserDetailsById" parameterType="Long" resultType="com.example.loginJwtRSA.security.UserDetailsCustom">
        SELECT
            id,
            username,
            password
        FROM aha_user
        WHERE id = #{id}
        AND is_active = 1
    </select>

    <select id="selectRole" resultType="com.example.loginJwtRSA.security.ModelRole">
        SELECT
            id,
            name
        FROM aha_role
    </select>

    <insert id="insertUserRole" parameterType="com.example.loginJwtRSA.security.ModelUserRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO aha_user_role (
            id_user,
            id_role
        )
        VALUES (
            #{idUser},
            #{idRole}
        )
    </insert>

    <select id="selectRolesByUsername" parameterType="String" resultType="com.example.loginJwtRSA.security.ModelRole">
        SELECT
            ar.id,
            ar.name
        FROM aha_user au
        JOIN aha_user_role aur
        ON aur.id_user = au.id
        JOIN aha_role ar
        ON ar.id = aur.id_role
        WHERE au.username = #{username}
    </select>

    <select id="selectRolesById" parameterType="Long" resultType="com.example.loginJwtRSA.security.ModelRole">
        SELECT
            ar.id,
            ar.name
        FROM aha_user_role aur
        JOIN aha_role ar
        ON aur.id_role = ar.id
        WHERE aur.id_user = #{id}
    </select>

    <insert id="createUser" parameterType="com.example.loginJwtRSA.security.RequestSignUp">
        INSERT INTO aha_user (
            username,
            password
        )
        VALUES (
            #{username},
            #{password}
        )
    </insert>

    <insert id="createUserApiKey" parameterType="com.example.loginJwtRSA.security.ModelApiKey" useGeneratedKeys="true" keyProperty="id">
        INSERT aha_api_key (
            id_user,
            api_key,
            expire_at
        )
        VALUES (
            #{idUser},
            #{apiKey},
            #{expireAt}
        )
    </insert>

    <select id="getApiKeyByApiKey" parameterType="String" resultType="com.example.loginJwtRSA.security.ResponseApiKey">
        SELECT
            id,
            id_user,
            api_key,
            expire_at,
            created_at,
            updated_at
        FROM aha_api_key
        WHERE api_key = #{apiKey}
    </select>

    <select id="getAuthorizations" parameterType="com.example.loginJwtRSA.security.RequestAuthorization" resultType="com.example.loginJwtRSA.security.ResponseAuthorization">
        SELECT
            id,
            (SELECT name FROM aha_role WHERE id = aad.id_role) AS role,
            (SELECT name FROM aha_http_method WHERE value = aad.value_method) AS method,
            (SELECT name FROM aha_http_method WHERE value = aad.value_method_for_self) AS method_for_self,
            (SELECT url FROM aha_authorization_url WHERE id = aad.id_authorization_url) AS url
        FROM aha_authorization_dynamic aad
        WHERE id_authorization_url = (SELECT id FROM aha_authorization_url WHERE url = #{url})
        AND (
            value_method = (SELECT value FROM aha_http_method WHERE name = #{method})
            OR value_method_for_self = (SELECT value FROM aha_http_method WHERE name = #{method})
        )
    </select>
</mapper>
